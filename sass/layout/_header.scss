.header {
  height: 85vh;
  background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)), url(../img/hero-small.jpg);
  background-size: cover;
  background-position: top center;
  position: relative;

  // Feature query
  // If clip-path or -webkit-clip-path is supported, then apply the clip-path style.
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    height: 95vh;
  }

  // Responsive image in CSS
  // 192 dots per inch is resolution of apple retina display, often used as reference for high resolution displays. Puls, if display width below 600px, don't need to load the high resolution image/can use the smaller image (small image is 1200px wide). OR, if display width is above 2000px, load the high resolution image (large image is 2000px wide). Use em instead of px for better scalability.
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
    only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), // For Safari
    only screen and (min-width: 125em) {
      background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)), url(../img/hero.jpg);
  }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; /* To center the button */
  }
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block; // To make the background color only as wide as the text, instead of the whole line width with block
  background-image: linear-gradient(to right,
    $color-primary-light,
    $color-primary-dark);
  -webkit-background-clip: text; // To clip the background color to the text
  color: transparent; // To hide the original text in order to show the background color
  letter-spacing: 0.2rem;
  transition: all 0.2s; // To add a smooth transition effect

  @include respond(tab-port) {
    font-size: 3rem;
  }

  @include respond(phone) {
    font-size: 2.5rem;
  }

  &:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba($color-black, 0.2);
  }
}
